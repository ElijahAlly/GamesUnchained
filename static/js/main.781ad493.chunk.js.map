{"version":3,"sources":["actions/filter_actions.tsx","reducers/filters_reducer.tsx","actions/game_actions.tsx","actions/image_actions.tsx","reducers/images_reducer.tsx","reducers/main_reducers/entities_reducer.tsx","reducers/games_reducer.tsx","reducers/main_reducers/root_reducer.tsx","store.tsx","hooks.ts","util/keys/Rapid_API.tsx","components/expanded_img.tsx","components/game_show.tsx","components/navbar.tsx","components/games_list.tsx","util/format_options.tsx","util/format_title.tsx","components/filter_list.tsx","util/filters.tsx","components/filter_results.tsx","App.tsx","index.tsx"],"names":["ADD_FILTER","REMOVE_FILTER","_initialState","category","platform","sortBy","SHOW_GAME","HIDE_GAME","EXPAND_IMAGE","COLLAPSE_IMAGE","expandImg","src","type","collapseImg","_InitialState","img","entities","combineReducers","filters","state","action","Object","freeze","newState","assign","where","push","filter","newArr","forEach","gameId","images","persistConfig","key","storage","whitelist","rootReducer","persistedReducer","persistReducer","middlewares","thunk","logger","store","createStore","applyMiddleware","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","RAPID_API_KEY","ExpandedImg","dispatch","className","onClick","draggable","_initialGameState","id","title","thumbnail","description","status","short_description","freetogame_profile_url","genre","game_url","publisher","release_date","developer","minimum_system_requirements","os","processor","memory","graphics","screenshots","image","GameShow","useState","game","setGame","imgSrc","useEffect","a","fetch","method","headers","json","data","getGame","highlight","setHighlight","getTabInfo","tab","descriptionEle","document","getElementsByClassName","innerHTML","length","map","Navbar","showGame","console","log","href","target","GamesData","GamesList","games","setGames","options","setOptions","filterCategories","table","i","slice","formatOptions","includes","getGames","maxLength","FilterList","filterBy","selectedFilters","toggleFilter","indx","removeFilter","addFilter","Categories","SortBy","Platforms","FilterResults","showCategories","setShowCategories","showSortBy","setShowSortBy","showPlatforms","setShowPlatforms","show","prev","filtersArr","values","categoryFilterCount","platformFilterCount","sortByFilterCount","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.781ad493.chunk.js","sourcesContent":["export const ADD_FILTER = 'ADD_FILTER';\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\n\nexport const addFilter = (filter: string, where: string) => ({\n    type: ADD_FILTER,\n    where,\n    filter,\n})\n\nexport const removeFilter = (filter: string, where: string) => ({\n    type: REMOVE_FILTER,\n    where,\n    filter,\n})","import { ADD_FILTER, REMOVE_FILTER } from '../actions/filter_actions';\n\ninterface ActionPayload {\n\ttype: string;\n\twhere: string;\n\t[x: string]: any;\n}\n\nexport interface FiltersState {\n\t[category: string]: string[];\n\tplatform: string[];\n\tsortBy: string[];\n}\n\nconst _initialState: FiltersState = {\n\tcategory: [],\n\tplatform: [],\n\tsortBy: [],\n};\n\nexport default (state = _initialState, action: ActionPayload) => {\n\tObject.freeze(state);\n\tconst newState: FiltersState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase ADD_FILTER:\n\t\t\tif (action.where !== 'category') {\n\t\t\t\tnewState[action.where] = [];\n\t\t\t}\n\t\t\tnewState[action.where].push(action.filter);\n\t\t\treturn newState;\n\t\tcase REMOVE_FILTER:\n\t\t\tconst newArr: string[] = [];\n\t\t\tnewState[action.where].forEach((filter: string) => {\n\t\t\t\tif (filter !== action.filter) newArr.push(filter);\n\t\t\t});\n\t\t\tnewState[action.where] = newArr;\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const SHOW_GAME = 'SHOW_GAME';\nexport const HIDE_GAME = 'HIDE_GAME';\n\nexport const showGame = (gameId: number) => ({\n    type: SHOW_GAME,\n    gameId\n})\n\nexport const hideGame = () => ({\n    type: HIDE_GAME,\n})","export const EXPAND_IMAGE = 'EXPAND_IMAGE';\nexport const COLLAPSE_IMAGE = 'COLLAPSE_IMAGE';\n\nexport const expandImg = (src: string) => ({\n    type: EXPAND_IMAGE,\n    src,\n})\n\nexport const collapseImg = () => ({\n    type: COLLAPSE_IMAGE,\n})","import { EXPAND_IMAGE, COLLAPSE_IMAGE } from '../actions/image_actions';\n\ninterface ActionPayload {\n\ttype: string;\n\t[src: string]: string;\n}\n\ninterface Initial {\n\timg: string;\n}\n\nconst _InitialState: Initial = { img: '' };\n\nexport default (state = _InitialState, action: ActionPayload) => {\n\tObject.freeze(state);\n\tconst newState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase EXPAND_IMAGE:\n\t\t\tnewState.img = action.src;\n\t\t\treturn newState;\n\t\tcase COLLAPSE_IMAGE:\n\t\t\tnewState.img = '';\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport filtersReducer from '../filters_reducer'\nimport gamesReducer from '../games_reducer'\nimport imagesReducer from '../images_reducer';\n\nconst entities = combineReducers({\n    filters: filtersReducer,\n    gameId: gamesReducer,\n    images: imagesReducer,\n});\n\nexport default entities;","import {HIDE_GAME, SHOW_GAME} from '../actions/game_actions';\n\ninterface ActionPayload {\n    type: string,\n    gameId: number\n}\n\nexport default (state: any = 'undefined', action: ActionPayload) => {\n    switch (action.type) {\n        case SHOW_GAME:\n            return action.gameId;\n        case HIDE_GAME:\n            return 'undefined';\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport entities from './entities_reducer';\n// import session from './session_reducer';\n// import errors from './errors_reducer';\n// import ui from './ui_reducer';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n\twhitelist: ['entities'],\n};\n\nconst rootReducer = combineReducers({\n\tentities,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport persistedReducer from './reducers/main_reducers/root_reducer';\n\nconst middlewares: any = [thunk];\n\n// Only show in development in future\n// if (process.env.NODE_ENV !== 'production') {\n\tmiddlewares.push(logger);\n// }\n\nconst store: any = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nconst persistor = persistStore(store);\n\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport {store, persistor};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export const RAPID_API_KEY = '0375b53b85msh1880c2c65fc1799p1766aajsn58835e09a56f';","import React from 'react';\nimport { collapseImg } from '../actions/image_actions';\nimport { useAppDispatch } from '../hooks';\n\nexport interface ExpandedImgProps {\n\tsrc: string;\n}\n\nconst ExpandedImg: React.FunctionComponent<ExpandedImgProps> = ({ src }) => {\n\tconst dispatch = useAppDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<section\n\t\t\t\tclassName='expanded-background'\n\t\t\t\tonClick={() => dispatch(collapseImg())}>\n\t\t\t\t<div className='close-img' onClick={() => dispatch(collapseImg())}>\n\t\t\t\t\tx\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<img src={src} className='expanded-img' draggable={false} />\n\t\t</>\n\t);\n};\n\nexport default ExpandedImg;\n","import React, { useEffect, useState } from 'react';\nimport { expandImg } from '../actions/image_actions';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport { RAPID_API_KEY } from '../util/keys/Rapid_API';\nimport ExpandedImg from './expanded_img';\n\nexport interface GameShowProps {\n\tgameId: string;\n}\n\ninterface MinSystemRequirements {\n\tos: string;\n\tprocessor: string;\n\tmemory: string;\n\tgraphics: string;\n\tstorage: string;\n}\n\ninterface GameProps {\n\tid: number;\n\ttitle: string;\n\tthumbnail: string;\n\tstatus: string;\n\tshort_description: string;\n\tdescription: string;\n\tgame_url: string;\n\tgenre: string;\n\tplatform: string;\n\tpublisher: string;\n\tdeveloper: string;\n\trelease_date: string;\n\tfreetogame_profile_url: string;\n\tminimum_system_requirements: MinSystemRequirements;\n\tscreenshots: {\n\t\tid: number;\n\t\timage: string;\n\t}[];\n}\n\nconst _initialGameState: GameProps = {\n\tid: 0,\n\ttitle: '',\n\tthumbnail: '',\n\tdescription: '',\n\tstatus: '',\n\tshort_description: '',\n\tfreetogame_profile_url: '',\n\tgenre: '',\n\tgame_url: '',\n\tplatform: '',\n\tpublisher: '',\n\trelease_date: '',\n\tdeveloper: '',\n\tminimum_system_requirements: {\n\t\tos: '',\n\t\tprocessor: '',\n\t\tmemory: '',\n\t\tgraphics: '',\n\t\tstorage: '',\n\t},\n\tscreenshots: [\n\t\t{\n\t\t\tid: 0,\n\t\t\timage: '',\n\t\t},\n\t],\n};\n\nconst GameShow: React.FunctionComponent<GameShowProps> = ({ gameId }) => {\n\tconst [game, setGame] = useState(_initialGameState);\n\tconst dispatch = useAppDispatch();\n\tconst imgSrc: any = useAppSelector((state) => `${state.entities.images.img}`);\n\n\tuseEffect(() => {\n\t\tconst getGame = async () => {\n\t\t\t// await fetch and then await to json()\n\t\t\tconst data = await (\n\t\t\t\tawait fetch(\n\t\t\t\t\t`https://free-to-play-games-database.p.rapidapi.com/api/game?id=${gameId}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-rapidapi-key': RAPID_API_KEY,\n\t\t\t\t\t\t\t'x-rapidapi-host': 'free-to-play-games-database.p.rapidapi.com',\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t).json();\n\t\t\tsetGame(data);\n\t\t};\n\n\t\tgetGame();\n\t}, []);\n\n\tconst [highlight, setHighlight] = useState('description');\n\n\tif (!game.id) return null;\n\n\tconst getTabInfo = (tab: string) => {\n\t\tconst descriptionEle = document.getElementsByClassName('description')[0];\n\n\t\tswitch (tab) {\n\t\t\tcase 'description':\n\t\t\t\tdescriptionEle.innerHTML = game.description;\n\t\t\t\tsetHighlight('description');\n\t\t\t\treturn;\n\t\t\tcase 'game-info':\n\t\t\t\tdescriptionEle.innerHTML = game.short_description;\n\t\t\t\tsetHighlight('game-info');\n\t\t\t\treturn;\n\t\t\tcase 'stats':\n\t\t\t\tdescriptionEle.innerHTML = game.developer;\n\t\t\t\tsetHighlight('stats');\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<section className='game-show'>\n\t\t\t{imgSrc && imgSrc.length > 0 ? (\n\t\t\t\t<ExpandedImg src={imgSrc}/>\n\t\t\t) : null}\n\t\t\t<h3 className='title'>{game.title}</h3>\n\t\t\t<div className='images'>\n\t\t\t\t<img className='main-img' src={game.thumbnail} draggable={false} onClick={() => dispatch(expandImg(game.thumbnail))} />\n\t\t\t\t{game.screenshots.map((img) => (\n\t\t\t\t\t<img className='main-img' src={`${img.image}`} key={img.id} draggable={false} onClick={() => dispatch(expandImg(img.image))} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<ul className='description-headers'>\n\t\t\t\t<li\n\t\t\t\t\tclassName={`header ${\n\t\t\t\t\t\thighlight == 'description' ? 'highlight-header' : ''\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={() => getTabInfo('description')}>\n\t\t\t\t\tDescription\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName={`header ${\n\t\t\t\t\t\thighlight == 'game-info' ? 'highlight-header' : ''\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={() => getTabInfo('game-info')}>\n\t\t\t\t\tMore Game Info\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName={`header ${highlight == 'stats' ? 'highlight-header' : ''}`}\n\t\t\t\t\tonClick={() => getTabInfo('stats')}>\n\t\t\t\t\tTech Stats\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<h3 className='description'>{game.description}</h3>\n\t\t</section>\n\t);\n};\n\nexport default GameShow;\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { hideGame } from '../actions/game_actions';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport GameShow from './game_show';\nexport interface NavbarProps {}\n\nconst Navbar: React.FunctionComponent<NavbarProps> = () => {\n\tconst gameId: string = useAppSelector((state) => `${state.entities.gameId}`);\n\tconst showGame: boolean = gameId !== 'undefined';\n\tconst dispatch = useAppDispatch();\n\n\tuseEffect(() => console.log(''), [showGame]);\n\n\treturn (\n\t\t<section className={`navbar ${showGame ? 'show-game-background' : ''}`}>\n\t\t\t<h3 className={`music ${showGame ? 'show-music' : ''}`}></h3>\n\t\t\t{showGame && <GameShow gameId={gameId} />}\n\t\t\t<div className='nav-footer'>\n\t\t\t\t<div className='app-header'>\n\t\t\t\t\t<h1 className='app-name'>Games Unchained</h1>\n\t\t\t\t\t<h2 className='app-description'>Explore 100% FREE games!  |</h2>\n\t\t\t\t\t<h2 className='app-src'>Powered by <a href=\"https://www.freetogame.com\" target='_blank'>FreeToGame</a></h2>\n\t\t\t\t</div>\n\t\t\t\t{showGame && <h3 className='close' onClick={() => dispatch(hideGame())}>Close</h3>}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport { formatTitle } from '../util/format_title';\nimport { formatOptions } from '../util/format_options';\nimport { FiltersState } from '../reducers/filters_reducer';\nimport { showGame } from '../actions/game_actions';\nimport { RAPID_API_KEY } from '../util/keys/Rapid_API';\n\n// developer: \"Phoenix Labs, Iron Galaxy\"\n// freetogame_profile_url: \"https://www.freetogame.com/dauntless\"\n// game_url: \"https://www.freetogame.com/open/dauntless\"\n// genre: \"MMORPG\"\n// id: 1\n// platform: \"PC (Windows)\"\n// publisher: \"Phoenix Labs\"\n// release_date: \"2019-05-21\"\n// short_description: \"A free-to-play, co-op action RPG with gameplay similar to Monster Hunter.\"\n// thumbnail: \"https://www.freetogame.com/g/1/thumbnail.jpg\"\n// title: \"Dauntless\"\n\nconst GamesData: object[] = [];\n\ninterface GamesListProps {}\n\nconst GamesList: React.FunctionComponent<GamesListProps> = () => {\n\tconst [games, setGames] = useState(GamesData);\n\tconst [options, setOptions] = useState('');\n\tconst dispatch = useAppDispatch();\n\n\tconst filterCategories: FiltersState =\n\t\tuseAppSelector((state) => state.entities.filters) || [];\n\n\tuseEffect(() => {\n\t\tconsole.table(filterCategories);\n\t\tsetOptions(() => formatOptions(filterCategories));\n\t}, [filterCategories]);\n\n\tuseEffect(() => {\n\t\tconsole.log('options', options);\n\t\tconst getGames = async () => {\n\t\t\t// await fetch and then await to json()\n\t\t\tconst data = await (\n\t\t\t\tawait fetch(\n\t\t\t\t\t`https://free-to-play-games-database.p.rapidapi.com/api/${\n\t\t\t\t\t\toptions.includes('tag') ? 'filter' : 'games'\n\t\t\t\t\t}${options}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-rapidapi-key': RAPID_API_KEY,\n\t\t\t\t\t\t\t'x-rapidapi-host': 'free-to-play-games-database.p.rapidapi.com',\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t).json();\n\t\t\tsetGames(data);\n\t\t};\n\n\t\tgetGames();\n\t}, [options]);\n\n\treturn (\n\t\t<ul className='games-list'>\n\t\t\t{games.length > 0 ? (\n\t\t\t\t<>\n\t\t\t\t\t{games.length > 0 &&\n\t\t\t\t\t\tgames.map((game: any) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={game.id}\n\t\t\t\t\t\t\t\tclassName='game-card'\n\t\t\t\t\t\t\t\tonClick={() => dispatch(showGame(game.id))}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`${game.thumbnail}`}\n\t\t\t\t\t\t\t\t\tclassName='game-img'\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<h2 className='game-title'>{formatTitle(game.title, 17)}</h2>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<li className='no-results'> No Results. Try removing some filters.</li>\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default GamesList;\n","import { FiltersState } from \"../reducers/filters_reducer\";\n\nexport const formatOptions = (filters: FiltersState) => {\n    const {category, platform, sortBy} = filters;\n    let options = '';\n\n    if (category.length === 1) {\n        options += `&category=${category[0]}`\n    } else {\n        category.forEach((filter, i) => {\n            options += `${i === 0 ? '&tag=' : '.'}${filter}`;\n        })\n    }\n\n    platform.forEach((filter, i) => {\n        options += `${i === 0 ? '&platform=' : '.'}${filter}`;\n    })\n\n    sortBy.forEach((filter, i) => {\n        options += `${i === 0 ? '&sort-by=' : '.'}${filter}`;\n    })\n\n    return options.length > 0 ? `?${options.slice(1)}` : ''\n}","export const formatTitle = (title: string, maxLength: number): string => {\n    if (title.length > maxLength) {\n        title = title.slice(0, maxLength-3) + '...';\n    }\n\n    return title;\n}","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { addFilter, removeFilter } from '../actions/filter_actions';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport { FiltersState } from '../reducers/filters_reducer';\n\ninterface FilterListProps {\n\tfilters: string[];\n\tfilterBy: any;\n}\n\nconst FilterList: React.FunctionComponent<FilterListProps> = ({\n\tfilters,\n\tfilterBy,\n}) => {\n\tconst dispatch = useAppDispatch();\n\tconst selectedFilters: FiltersState =\n\t\tuseAppSelector((state) => state.entities.filters) || [];\n\n\tconst toggleFilter = (filter: string, indx: number) => {\n\t\tif (selectedFilters[filterBy].includes(filter)) {\n\t\t\tdispatch(removeFilter(filter, filterBy));\n\t\t\treturn;\n\t\t}\n\t\tdispatch(addFilter(filter, filterBy));\n\t};\n\n\treturn (\n\t\t<ul className='filter-list'>\n\t\t\t{filters.map((filter, i) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={`filters ${\n\t\t\t\t\t\tselectedFilters[filterBy].includes(filter) ? 'selected-filter' : ''\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={() => toggleFilter(filter, i)}>\n\t\t\t\t\t{filter}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default FilterList;\n","export const Categories = [\n\t'mmorpg',\n\t'shooter',\n\t'strategy',\n\t'moba',\n\t'racing',\n\t'sports',\n\t'social',\n\t'sandbox',\n\t'open-world',\n\t'survival',\n\t'pvp',\n\t'pve',\n\t'pixel',\n\t'voxel',\n\t'zombie',\n\t'turn-based',\n\t'first-person',\n\t'third-Person',\n\t'top-down',\n\t'tank',\n\t'space',\n\t'sailing',\n\t'side-scroller',\n\t'superhero',\n\t'permadeath',\n\t'card',\n\t'battle-royale',\n\t'mmo',\n\t'mmofps',\n\t'mmotps',\n\t'3d',\n\t'2d',\n\t'anime',\n\t'fantasy',\n\t'sci-fi',\n\t'fighting',\n\t'action-rpg',\n\t'action',\n\t'military',\n\t'martial-arts',\n\t'flight',\n\t'low-spec',\n\t'tower-defense',\n\t'horror',\n\t'mmorts',\n];\nexport const SortBy = ['release-date', 'popularity', 'alphabetical', 'relevance'];\nexport const Platforms = ['pc', 'browser'];\n","import React from 'react';\nimport { useState } from 'react';\nimport FilterList from './filter_list';\nimport { Categories, SortBy, Platforms } from '../util/filters';\nimport { FiltersState } from '../reducers/filters_reducer';\nimport { useAppSelector } from '../hooks';\n\nexport interface FilterResultsProps {}\n\nconst FilterResults: React.FunctionComponent<FilterResultsProps> = () => {\n\tconst [showCategories, setShowCategories] = useState(false);\n\tconst [showSortBy, setShowSortBy] = useState(false);\n\tconst [showPlatforms, setShowPlatforms] = useState(false);\n\n\tconst show = (type: string) => {\n\t\tswitch (type) {\n\t\t\tcase 'categories':\n\t\t\t\tsetShowCategories((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tcase 'sortBy':\n\t\t\t\tsetShowSortBy((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tcase 'platforms':\n\t\t\t\tsetShowPlatforms((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst selectedFilters: FiltersState =\n\t\tuseAppSelector((state) => state.entities.filters) || [];\n\tconst filtersArr = Object.values(selectedFilters);\n\tconst categoryFilterCount = filtersArr[0].length;\n\tconst platformFilterCount = filtersArr[1].length;\n\tconst sortByFilterCount = filtersArr[2].length;\n\n\treturn (\n\t\t<section className='filter-results'>\n\t\t\t<h3 id='category' onClick={() => show('categories')}>\n\t\t\t\tCategory\n\t\t\t\t{categoryFilterCount > 0 && (\n\t\t\t\t\t<div className='filter-count'>{`${categoryFilterCount}`}</div>\n\t\t\t\t)}\n\t\t\t\t<div className={`filter-arrow ${showCategories ? 'open' : ''}`}>‹</div>\n\t\t\t</h3>\n\t\t\t{showCategories ? (\n\t\t\t\t<FilterList filters={Categories} filterBy={'category'} />\n\t\t\t) : null}\n\t\t\t<h3 id='sort-by' onClick={() => show('sortBy')}>\n\t\t\t\tSort By\n\t\t\t\t{sortByFilterCount > 0 && (\n\t\t\t\t\t<div className='filter-count'>{`${sortByFilterCount}`}</div>\n\t\t\t\t)}\n\t\t\t\t<span className={`filter-arrow ${showSortBy ? 'open' : ''}`}>‹</span>\n\t\t\t</h3>\n\t\t\t{showSortBy ? <FilterList filters={SortBy} filterBy={'sortBy'} /> : null}\n\t\t\t<h3 id='platform' onClick={() => show('platforms')}>\n\t\t\t\tPlatform\n\t\t\t\t{platformFilterCount > 0 && (\n\t\t\t\t\t<div className='filter-count'>{`${platformFilterCount}`}</div>\n\t\t\t\t)}\n\t\t\t\t<span className={`filter-arrow ${showPlatforms ? 'open' : ''}`}>‹</span>\n\t\t\t</h3>\n\t\t\t{showPlatforms ? (\n\t\t\t\t<FilterList filters={Platforms} filterBy={'platform'} />\n\t\t\t) : null}\n\t\t</section>\n\t);\n};\n\nexport default FilterResults;\n","import React from 'react';\nimport Navbar from './components/navbar'\nimport GamesList from './components/games_list'\nimport FilterResults from './components/filter_results'\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <section className='show-results'>\n        <FilterResults />\n        <GamesList />\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}